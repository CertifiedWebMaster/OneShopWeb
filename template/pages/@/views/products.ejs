<%
// load products page content
const pageProducts = _.cms('products')

// current product body
const { body } = await _.resolveRoute()
const breadcrumbs = []
_.ecomUtils.categoriesList(body).forEach(categoryName => {
  const findCategory = category => category.name === categoryName
  const category = (body.categories && body.categories.find(findCategory)) ||
    _.categories.find(findCategory)
  if (category) {
    breadcrumbs.push({
      name: _.ecomUtils.name(category),
      link: `/${category.slug}`
    })
  }
})
breadcrumbs.push({
  name: _.ecomUtils.name(body),
  link: `/${body.slug}`
})
%>

<div class="container py-1 py-sm-2 py-lg-4">
  <%- await include('components/breadcrumbs', { _, opt: { breadcrumbs } }) %>

  <div class="product" id="product">
    <section id="product-block" class="product__block row">
      <% if (body.pictures) { %>
        <% const imgObj = _.ecomUtils.img(body, null, 'big') %>
        <% if (imgObj) { %>
          <div class="col-12 col-md-6">
            <div class="product__picture">
              <img
                class="lozad fade img-fluid"
                data-src="<%= imgObj.url %>"
                alt="<%= imgObj.alt %>"
              >
            </div>
          </div>
        <% } %>
      <% } %>

      <div class="col">
        <h1 class="product__name">
          <%= _.ecomUtils.name(body) %>
        </h1>
        <p class="product__sku">
          SKU:
          <%= body.sku %>
        </p>
        <button
          id="buy-button"
          type="button"
          class="product__buy btn btn-lg btn-primary"
          disabled
        >
          <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
          </div>
          <%= _.dictionary().buy %>
        </button>
        <% if (body.short_description) { %>
          <p class="lead product__info">
            <%= body.short_description %>
          </p>
        <% } %>
      </div>
    </section>

    <%
    const showcaseTypes = ['related', 'recommended']
    for (let i = 0; i < showcaseTypes.length; i++) {
      const showcaseType = showcaseTypes[i]
      if (pageProducts[showcaseType] && pageProducts[showcaseType].showcase) {
        const { title } = pageProducts[showcaseType]
        // get list of products from Graphs API
        const url = `/products/${body._id}/${showcaseType}.json`
        const { data } = await _.ecomClient.graphs({ url })
        const productIds = _.ecomUtils.recommendedIds(data)
        let items = []
        if (Array.isArray(productIds) && productIds.length) {
          // search related/recommended items by IDs
          const search = new _.EcomSearch()
          await search.setProductIds(productIds).fetch()
          items = search.getItems()
        }
        %>
        <%- await include('components/products-carousel', { _, opt: { items, title } }) %>
        <%
      }
    }
    %>

    <% if (body.body_html) { %>
      <section class="product__description">
        <p class="lead">
          <a href="#description" name="description">#</a>
          <%= _.dictionary().product_description %>
        </p>
        <div class="html-clearfix">
          <%- body.body_html %>
        </div>
      </section>
    <% } %>

    <% if (body.specifications) { %>
      <section class="product__specs">
        <p class="lead">
          <a href="#specs" name="specs">#</a>
          <%= _.dictionary().product_specifications %>
        </p>
        <table class="table table-striped">
          <tbody>
            <% for (const gridId in body.specifications) {
              if (body.specifications[gridId]) {
                %>
                <tr>
                  <td class="text-muted">
                    <%= _.ecomUtils.gridTitle(gridId, _.grids) %>
                  </td>
                  <td>
                    <%= _.ecomUtils.specTextValue(body, gridId, _.grids) %>
                  </td>
                </tr>
                <%
              }
            } %>
          </tbody>
        </table>
      </section>
    <% } %>

    <% if (pageProducts.additional_content) { %>
      <div class="p-3">
        <%- _.md.render(pageProducts.additional_content) %>
      </div>
    <% } %>
  </div>
</div>
